# SPDX-FileCopyrightText: Copyright (c) 2023-2025 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build, Test and Publish cuopt images
  
on:
  workflow_dispatch:
    inputs:
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        type: string

defaults:
  run:
    shell: bash

permissions:
  actions: read
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    container:
      image: rapidsai/ci-conda:latest
    outputs:
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
      CUOPT_VER: ${{ steps.compute-cuopt-ver.outputs.CUOPT_VER }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # unshallow fetch for setuptools-scm
          persist-credentials: false

      - name: Compute matrix
        id: compute-matrix
        run: |
          MATRIX=$(cat <<EOF
          arch: [amd, arm]
          cuda_ver: [12.8.0]
          python_ver: [3.12.11]
          EOF
          )
          echo "MATRIX=${MATRIX}" >> $GITHUB_OUTPUT

      - name: Compute cuopt version
        id: compute-cuopt-ver
        run: |
          ver=$(git describe --tags --abbrev=0)
          CUOPT_VER=$(echo "$ver" | sed -E 's/^v//' \
            | sed -E 's/\.0+([0-9])/\.\1/g' \
            | sed -E 's/\.0+([a-zA-Z].*)/.0\1/g' \
            | sed -E 's/\b0*([0-9]+)\b/\1/g')
          echo "$CUOPT_VER" >> $GITHUB_OUTPUT

  build-images:
    name: Build images for ${inputs.arch} architecture 
    needs: compute-matrix
    strategy:
      matrix: ${{ fromJson(needs.compute-matrix.outputs.MATRIX) }}
    uses: ./.github/workflows/build-images.yaml
    with:
      arch: ${{ matrix.arch }}
      cuda_ver: ${{ matrix.cuda_ver }}
      python_ver: ${{ matrix.python_ver }}
      cuopt_ver: ${{ steps.compute-cuopt-ver.outputs.CUOPT_VER }}

  build-cuopt-multiarch-manifest:
    name: Build cuopt multiarch manifest
    needs: build-images
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CUOPT_DOCKERHUB_USERNAME }}
          password: ${{ secrets.CUOPT_DOCKERHUB_PASSWORD }}
      - name: Login to NGC
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CUOPT_NGC_USERNAME }}
          password: ${{ secrets.CUOPT_NGC_PASSWORD }}
      - name: Create multiarch manifest
        shell: bash
        env:
          CUOPT_VER: ${{ steps.compute-cuopt-ver.outputs.CUOPT_VER }}
          CUDA_VER: ${{ matrix.cuda_ver }}
          PYTHON_VER: ${{ matrix.python_ver }}
          ARCH: ${{ matrix.arch }}

        run: ci/docker/create_multiarch_manifest.sh
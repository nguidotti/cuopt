# Copyright (c) 2025, NVIDIA CORPORATION.
schema_version: 1

context:
  version: ${{ env.get("RAPIDS_PACKAGE_VERSION") }}
  date_string: '${{ env.get("RAPIDS_DATE_STRING") }}'
  py_version: ${{ env.get("RAPIDS_PY_VERSION") }}
  py_buildstring: ${{ py_version | version_to_buildstring }}
  head_rev: '${{ git.head_rev(".")[:8] }}'

package:
  name: cuopt-server
  version: ${{ version }}

source:
  path: ../../..

build:
  string: py${{ py_buildstring }}_${{ date_string }}_${{ head_rev }}
  script:
    content: |
      # We pass an explicit matrix-entry here along with `disable-cuda=true` to
      # avoid `rapids-build-backend` trying to use an unavailable `nvcc` to
      # lookup a `CUDA_VERSION` that we don't need for the conda build.
      python -m pip install -C rapidsai.disable-cuda=true -C rapidsai.matrix-entry='cuda=12.x;cuda_suffixed=true' ./python/cuopt_server

requirements:
  host:
    - pip
    - python =${{ py_version }}
    - rapids-build-backend >=0.3.0,<0.4.0.dev0
    - setuptools>=61.0.0
  run:
    - cuopt =${{ version }}
    - fastapi >=0.104.1
    - jsonref =1.1.0
    - httpx
    - msgpack-python =1.1.0
    - msgpack-numpy =0.4.8
    - numpy >=1.23,<3.0a0
    - pandas>=2
    - python
    - uvicorn ${{ uvicorn_version }}

tests:
  - python:
      imports:
        - cuopt_server
      pip_check: false

about:
  homepage: ${{ load_from_file("python/cuopt_server/pyproject.toml").project.urls.Homepage }}
  license: ${{ load_from_file("python/cuopt_server/pyproject.toml").project.license.text }}
  summary: ${{ load_from_file("python/cuopt_server/pyproject.toml").project.description }}
